#include <iostream>

using namespace std;
//Yun Lin
class Fraction {
public:
  
    void set(int a, int b);
    Fraction multipliedBy(Fraction a);
    Fraction dividedBy(Fraction a);
    Fraction addedTo(Fraction a);
    Fraction  subtract(Fraction a);
    bool isEqualTo(Fraction a);
    void print();

private:
    int numerator ;
    int denominator;
};

int main()

{

    Fraction f1;

    Fraction f2;

    Fraction result;



    f1.set(9, 8);

    f2.set(2, 3);



    cout << "The product of ";

    f1.print();

    cout << " and ";

    f2.print();

    cout << " is ";

    result = f1.multipliedBy(f2);

    result.print();

    cout << endl;



    cout << "The quotient of ";

    f1.print();

    cout << " and ";

    f2.print();

    cout << " is ";

    result = f1.dividedBy(f2);

    result.print();

    cout << endl;



    cout << "The sum of ";

    f1.print();

    cout << " and ";

    f2.print();

    cout << " is ";

    result = f1.addedTo(f2);

    result.print();

    cout << endl;



    cout << "The difference of ";

    f1.print();

    cout << " and ";

    f2.print();

    cout << " is ";

    result = f1.subtract(f2);

    result.print();

    cout << endl;



    if (f1.isEqualTo(f2)) {

        cout << "The two Fractions are equal." << endl;

    }
    else {

        cout << "The two Fractions are not equal." << endl;

    }

}



void Fraction::set(int a, int b) { numerator  = a, denominator = b; }

Fraction Fraction::multipliedBy(Fraction a) {
    Fraction result;
    result.numerator  = numerator *a.numerator ;
    result.denominator = denominator * a.denominator;
    return result;
}
Fraction Fraction::dividedBy(Fraction a) {
    Fraction result;
    result.numerator  = numerator  * a.denominator;
    result.denominator = denominator * a.numerator ;
    return result;

}
Fraction Fraction::addedTo(Fraction a) {
    Fraction result;
    result.numerator  = numerator  * a.denominator + a.numerator  * denominator;
    result.denominator= denominator *a.denominator;
    return result;
}


Fraction Fraction::subtract(Fraction a) {
    Fraction result;
    result.numerator  = numerator  * a.numerator  - a.numerator  * denominator;
    result.denominator = denominator * a.denominator;
    return result;
}
bool Fraction::isEqualTo(Fraction a){
    if (dominator == a.numerator  || numniator == a.denominator) {
        return true;
      }
    return false;
}
void Fraction::print() {
    cout << numerator  << "/" << denominator;
}
